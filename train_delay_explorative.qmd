---
title: "An exploration of train delay data"
title-block-banner: "#000061"
subtitle: ""
description: ""
date: last-modified
date-format: "YYYY-MM-DD"
mainfont: Figtree
sansfont: Georgia
footnotes-hover: true
reference-location: margin
lang: en
number-sections: false
crossref:
  chapters: true
author:
  - name: Mattias Vesterlund
    orcid: 0000-0001-9471-6592
    email: matves29@kth.se
    url: https://kth.se
    affiliations:
      - name: KTH Library
        address: Osquars backe 30
        city: Stockholm
        postal-code: 100 44
        url: https://www.kth.se/biblioteket
highlight-style: pygments
fig-cap-location: top
format: 
  kth-quarto-html: default
editor: visual
bibliography: references.bib
link-citations: true
csl: IEEE.csl
---

### Purpose of this quarto-html

-   To explore the dataset from [Zhang et al.](https://doi.org/10.6084/m9.figshare.15087882.v4)
-   To try to determine if we can find a link between weather and train delays.

```{r libraries,warning=F, echo=F,message=F, dev = "png", dev.args=list(bg="transparent")}
library(ggplot2)
library(ktheme)
library(matrixStats)
library(plotly)
library(tidyr)
library(dplyr)
library(kableExtra)
library(plotly)
library(stringr)
#library("reshape2")
#library("gplots")
#library("devtools")
#library("wesanderson")
#library("msigdbr")
#library("ggbeeswarm")
#library("ggpubr")
#library("ggridges")
#library("ggExtra")
#library("robustbase")
#library("ggpubr")
#library("survival")
#library("rms")
#library("survminer")
#library("factoextra")
#library("NbClust")
#library("survival")
#library("survminer")
#library("gtsummary")
#library("rms")
#library("reshape2")
#library("gt")
#library(kableExtra)
#select <- dplyr::select
```

```{r data, warning=F, echo=F,message=F, dev = "png", dev.args=list(bg="transparent")}
traindata<-read.csv("data/high-speed trains operation data.csv")
```

Lets begin by having a look at some very basic features of the dataset we have just found:

##### Dimensions

```{r dimensions, warning=F, echo=F,message=F, dev = "png", dev.args=list(bg="transparent")}
dim(traindata)
```

##### Column names

```{r columns, warning=F, echo=F,message=F, dev = "png", dev.args=list(bg="transparent")}

colnames(traindata)

```

The dataset seems well structured, but is also quite large.

### Overview of the data  - Summary statistics

```{r summary, warning=F, echo=F,message=F, dev = "png", dev.args=list(bg="transparent")}

ordered_by_station <- traindata %>% group_by(station_name) %>% 
  summarise(Mean_arriv=mean(arrival_delay), 
            Mean_depar=mean(departure_delay), 
            stdev_arriv=sd(arrival_delay),
            stdev_delay=sd(departure_delay),
            n=length(arrival_delay),
            unique_arriv=length(unique(arrival_delay)),
            unique_dep=length(unique(departure_delay)),
            Mean_temp=mean(temperature)) %>% 
  arrange(desc(Mean_arriv))
top20_stations<-ordered_by_station$station_name[1:20]

ordered_by_train <- traindata %>% group_by(train_number) %>% 
  summarise(Mean_arriv=mean(arrival_delay), 
            Mean_depar=mean(departure_delay), 
            stdev_arriv=sd(arrival_delay),
            stdev_delay=sd(departure_delay),
            n=length(arrival_delay),
            unique_arriv=length(unique(arrival_delay)),
            unique_dep=length(unique(departure_delay)),
            Mean_temp=mean(temperature)) %>% 
  arrange(desc(Mean_arriv))
top20_train<-ordered_by_train$train_number[1:20]

ordered_by_station %>% head %>% kable() #use kable to make a nice table 

ordered_by_train %>% head %>% kable() #use kable to make a nice table 

```

### Average departure delays

```{r density, warning=F, echo=F,message=F, dev = "png", dev.args=list(bg="transparent")}
ggplot(ordered_by_station, aes(Mean_depar)) + 
  geom_density(adjust=1/50) +
  scale_color_kth() +
  scale_fill_kth()+
  theme_kth_neo() +
  theme(legend.position="none",
        axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
  labs(x ="Departure delay (min)",y="",title="Average Departure delay",
       subtitle="",
       caption="")

ggplot(ordered_by_station, aes(Mean_depar)) + 
  geom_density(adjust=1/50) +
  scale_color_kth() +
  scale_fill_kth()+
  theme_kth_neo() +
  theme(legend.position="none",
        axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
  labs(x ="Departure delay (min)",y="",title="Average Departure delay",
       subtitle="",
       caption="")+
  xlim(-3,3)

ggplot(ordered_by_station, aes(Mean_depar)) + 
  geom_density(adjust=1/5) +
  scale_color_kth() +
  scale_fill_kth()+
  theme_kth_neo() +
  theme(legend.position="none",
        axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
  labs(x ="Departure delay (min)",y="",title="Average Departure delay",
       subtitle="",
       caption="")+
  xlim(60,600)

```

### Looking at the data (and not the summary stat)

```{r indep,  warning=F, echo=F,message=F, dev = "png", dev.args=list(bg="transparent")}
traindata_t3<-filter(traindata,station_name %in% c("Funingnan Railway Station"))
traindata_t3$date<-as.Date(traindata_t3$date)
traindata_t3$station_name<-as.factor(traindata_t3$station_name)

ggplot(traindata_t3, aes(x=date,y=departure_delay, group = train_number,colour = train_number)) + 
  geom_line() + 
  scale_color_kth() +
  scale_fill_kth()+
  theme_kth_neo() +
  theme(#legend.position="none",
        axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
  labs(x ="Date",y="Delay (min)",title="Departure Delay - Funingnan",
       subtitle="",
       caption="")

traindata_t0<-filter(traindata,station_name %in% c("Tianshuinan Railway Station"))
#traindata_t0<-filter(traindata_t0,train_direction %in% c("up"))
traindata_t0<-filter(traindata_t0,train_number %in% c("G1713","G1714","G2021","G1834"))
traindata_t0$date<-as.Date(traindata_t0$date)
traindata_t0$station_name<-as.factor(traindata_t0$station_name)

ggplot(traindata_t0, aes(x=date,y=departure_delay, group = train_number,colour = train_number)) + 
  geom_line() + 
  scale_color_kth() +
  scale_fill_kth()+
  theme_kth_neo() +
  theme(#legend.position="none",
        axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
  labs(x ="Date",y="Delay (min)",title="Departure Delay - Tianshuinan",
       subtitle="",
       caption="")
```

### By number of departures

```{r bynumdep,  warning=F, echo=F,message=F, dev = "png", dev.args=list(bg="transparent")}
ggplot(ordered_by_train, aes(x=n,y=Mean_depar)) + 
  geom_point() + 
  scale_color_kth() +
  scale_fill_kth()+
  theme_kth_neo() +
  theme(legend.position="none",
        axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
  labs(y ="Departure delay (min)",x="Number of departures",title="Average Departure Delay",
       subtitle="Trains by number of departures",
       caption="")

##Lets try selecting a few trains maybe 2000 - 2500 departures over the time period.

select_trains <- unlist(as.vector(ordered_by_train[(which(ordered_by_train$n %in% c(2000:2250))),c("train_number")]))
select_stations <- unlist(as.vector(ordered_by_station[(which(ordered_by_station$n %in% c(10000:12500))),c("station_name")]))
subset1<-traindata[(which(traindata$train_number %in% select_trains)),]
subset2<-subset1[(which(subset1$station_name %in% select_stations)),]

ggplot(ordered_by_station, aes(x=n,y=Mean_depar)) + 
  geom_point() + 
  scale_color_kth() +
  scale_fill_kth()+
  theme_kth_neo() +
  theme(legend.position="none",
        axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
  labs(y ="Departure delay (min)",x="Number of departures",title="Average Departure Delay",
       subtitle="Stations by number of departures",
       caption="")



subsetplot_1 <- ggplot(subset2, aes(x=temperature,y=departure_delay,text=paste0("Station: ",station_name, "\nTrain: ",train_number, "\nDelay: ", departure_delay, " min"))) + 
  geom_point() + 
  scale_color_kth() +
  scale_fill_kth()+
  theme_kth_neo() +
  theme(legend.position="none",
        axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
  labs(y ="Departure delay (min)",x="temperature",title="subset selection",
       subtitle="No groupings ",
       caption="")


subsetplot_2 <- ggplot(subset2, aes(x=temperature,y=departure_delay, colour=station_name)) + 
  geom_point() + 
  scale_color_kth() +
  scale_fill_kth()+
  theme_kth_neo() +
  #theme(legend.position="none",
  #      axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
  labs(y ="Departure delay (min)",x="temperature",title="subset selection",
       subtitle="coloured by stations",
       caption="")

subsetplot_1
subsetplot_2
ggplotly(subsetplot_1,tooltip = "text")

subset3<-subset2 %>% filter(str_detect(station_name,"Qufudong Railway Station", negate = T))

subsetplot_3 <- ggplot(subset3, aes(x=temperature,y=departure_delay,text=paste0("Station: ",station_name, "\nTrain: ",train_number, "\nDelay: ", departure_delay, " min"))) + 
  geom_point() + 
  scale_color_kth() +
  scale_fill_kth()+
  theme_kth_neo() +
  theme(legend.position="none",
        axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
  labs(y ="Departure delay (min)",x="temperature",title="subset selection",
       subtitle="No groupings ",
       caption="")
ggplotly(subsetplot_3,tooltip = "text")


```

### Basic analysis of relation between weather and departure delays

```{r analysis, warning=F, echo=F,message=F, dev = "png", dev.args=list(bg="transparent")}

library(ggstatsplot)
ggstatsplot::ggscatterstats(data = subset3, x = temperature, y = departure_delay,type = 'pearson')

ggplot(subset3, aes(x=station_name,fill=major_holiday,y=departure_delay)) + 
  geom_boxplot() + 
  scale_color_kth() +
  scale_fill_kth()+
  theme_kth_neo() +
  theme(legend.position="top",
        axis.text.x = element_blank()) +
  labs(y ="Departure delay (min)",x="temperature",title="Subset 3",
       subtitle="Major holiday ",
       caption="")+
  ylim(-5,5)

ggplot(subset3, aes(x=weather,fill=weather,y=departure_delay)) + 
  geom_violin() + 
  scale_color_kth() +
  scale_fill_kth()+
  theme_kth_neo() +
  theme(legend.position="top",
        axis.text.x = element_blank()) +
  labs(y ="Departure delay (min)",x="temperature",title="Subset 3",
       subtitle="weather ",
       caption="")+
  ylim(-5,5)

weather_aov <- aov(departure_delay ~ weather, data = subset3)
summary.lm(weather_aov)

subset3$wind_strength<-subset3$wind
subset3$wind_strength<-gsub('N|NE|NW|E|W|S|SE|SW','',subset3$wind_strength)

ggplot(subset3, aes(x=wind_strength,fill=wind_strength,y=departure_delay)) + 
  geom_violin() + 
  scale_color_kth() +
  scale_fill_kth()+
  theme_kth_neo() +
  theme(legend.position="top",
        axis.text.x = element_blank()) +
  labs(y ="Departure delay (min)",x="temperature",title="Subset 3",
       subtitle="wind_strength ",
       caption="")+
  ylim(-5,5)

wind_aov <- aov(departure_delay ~ wind_strength, data = subset3)
summary.lm(wind_aov)


subset3$wind_strength2<-subset3$wind_strength
subset3$wind_strength2<-gsub('fresh breeze from the |gentle breeze from the |light winds from the | light winds from the ' ,'light winds',subset3$wind_strength2)
subset3$wind_strength2<-gsub('moderate breeze from the |strong breeze from the |moderate gale from the ' ,'strong winds',subset3$wind_strength2)

ggplot(subset3, aes(x=wind_strength2,fill=wind_strength2,y=departure_delay)) + 
  geom_boxplot() + 
  scale_color_kth() +
  scale_fill_kth()+
  theme_kth_neo() +
  theme(legend.position="top",
        axis.text.x = element_blank()) +
  labs(y ="Departure delay (min)",x="temperature",title="Subset 3",
       subtitle="wind_strength ",
       caption="")+
  ylim(-5,5)


t.test(departure_delay~wind_strength2,data=subset3)

```

Focus on the stations and actual (positive) departure delays. Filtered data here.

```{r explore, warning=F, echo=F,message=F, dev = "png", dev.args=list(bg="transparent")}
train_delays<-traindata[(which(traindata$departure_delay>0)),]

delays_by_station <- train_delays %>% group_by(station_name) %>% 
  summarise(Mean_arriv=mean(arrival_delay), 
            Mean_depar=mean(departure_delay), 
            stdev_arriv=sd(arrival_delay),
            stdev_delay=sd(departure_delay),
            n=length(departure_delay),
            unique_arriv=length(unique(arrival_delay)),
            unique_dep=length(unique(departure_delay)),
            Mean_temp=mean(temperature),
            prop_Uniq_depdel = length(unique(departure_delay))/length(departure_delay)) %>% 
  arrange(desc(Mean_depar))

topdelay<-delays_by_station$station_name[1:3]

ggplot(delays_by_station, aes(Mean_depar)) + 
  geom_density(adjust=1/5) +
  scale_color_kth() +
  scale_fill_kth()+
  theme_kth_neo() +
  theme(legend.position="none",
        axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
  labs(x ="Departure delay (min)",y="",title="Average Departure delay",
       subtitle="",
       caption="")+
  xlim(0,60)

ggplot(delays_by_station, aes(Mean_depar)) + 
  geom_density(adjust=1/5) +
  scale_color_kth() +
  scale_fill_kth()+
  theme_kth_neo() +
  theme(legend.position="none",
        axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
  labs(x ="Departure delay (min)",y="",title="Average Departure delay",
       subtitle="",
       caption="")+
  xlim(60,600)

ggplot(delays_by_station, aes(x=Mean_depar,y=Mean_temp)) + 
  geom_point() + 
  scale_color_kth() +
  scale_fill_kth()+
  theme_kth_neo() +
  theme(legend.position="none",
        axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
  labs(x ="Departure delay (min)",y="Temperature",title="Average Departure Delay",
       subtitle="",
       caption="")

traindata_t3<-filter(traindata,station_name %in% c("Funingnan Railway Station"))
traindata_t3$date<-as.Date(traindata_t3$date)
traindata_t3$station_name<-as.factor(traindata_t3$station_name)

ggplot(traindata_t3, aes(x=date,y=departure_delay, group = train_number,colour = train_number)) + 
  geom_line() + 
  scale_color_kth() +
  scale_fill_kth()+
  theme_kth_neo() +
  theme(#legend.position="none",
        axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
  labs(x ="Date",y="Delay (min)",title="Departure Delay - Funingnan",
       subtitle="",
       caption="")

traindata_t0<-filter(traindata,station_name %in% c("Tianshuinan Railway Station"))
#traindata_t0<-filter(traindata_t0,train_direction %in% c("up"))
traindata_t0<-filter(traindata_t0,train_number %in% c("G1713","G1714","G2021","G1834"))
traindata_t0$date<-as.Date(traindata_t0$date)
traindata_t0$station_name<-as.factor(traindata_t0$station_name)

ggplot(traindata_t0, aes(x=date,y=departure_delay, group = train_number,colour = train_number)) + 
  geom_line() + 
  scale_color_kth() +
  scale_fill_kth()+
  theme_kth_neo() +
  theme(#legend.position="none",
        axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
  labs(x ="Date",y="Delay (min)",title="Departure Delay - Tianshuinan",
       subtitle="",
       caption="")

```

Deselect any stations with few unique departure delays as this is more likely due to other circumstances.
